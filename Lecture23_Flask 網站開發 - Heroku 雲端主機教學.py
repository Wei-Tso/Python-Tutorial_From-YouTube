'''
---------------------------------------------------------
|	此課程程式包含：									 |
|	- Lecture22_Flask 網站開發 - Heroku 雲端主機教學.py  | 
|   - [資料夾]flask-heroku								|
|		- app.py 										|
|		- runtime.txt									|
|		- requirements.txt								|
|		- Procfile										|
---------------------------------------------------------
'''


# 基本流程
'''
1. 建立 Flask 專案描述檔案
2. 安裝 Git 工具
3. 到 Heroku 註冊帳號、建立應用
4. 安裝 Heroku 命令列工具
5. 將程式部屬到 Heroku App ，並測試
'''

#--------------------------------------------------------

# 建立描述檔
# 告訴別人我們的專案如何運作
'''
runtime.txt
# 描述使用的 Python 環境
'''
'''
requirements.txt
# 描述程式運作所需要的套件
'''
'''
Procfile(沒有副檔名)(P 要大寫)
# 告訴 Heroku 如何執行程式
# web gunicorn app:app
第一個 app ：主要檔案的名稱，app.py 的 app
第二個 app ：app.py 中，程式碼 app = Flask(__name__) 的 app
'''

#--------------------------------------------------------

# Git 工具
'''
搜尋 Git ，下載並安裝 Git Tool
'''

#--------------------------------------------------------

# 註冊帳號
'''
Heroku 官網，註冊一個帳號
'''

# 建立應用程式
'''
選擇建立 Application 應用程式
'''

#--------------------------------------------------------

# Heroku CLI(命令列工具)
'''
按照 Heroku 官網，應用程式中的指示安裝
'''

#--------------------------------------------------------

# 部屬專案
# 使用命令列模式
'''
以下步驟使用命令列模式執行
1. 登入 Heroku
heroku login
2. 初始化專案
git init
heroku git:remote -a 專案名稱
3. 更新專案
git add .
git commit -m "更新訊息"
git push heroku master
'''